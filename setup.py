# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Jul 14 05:19:46 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))